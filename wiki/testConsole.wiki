#labels testconsole,PFM,testing
Simulating events using Test Console

= Introduction =
*Test Console* is , from which events from any source can be simulated.

Here, the test console is used to simulate events of any type from any source (i.e. RTLS, BPM or other system) and send them to the state monitor service. The simulated events are generated by providing a test script to the console which has the ability to send those events manually or automatically.  


= Testing CEP =
*Why should we test CEP?*

a. To ensure CEP receives simulated events from the Message Broker.

b. To ensure CEP generates proper business events. 


*How do we test CEP?*

*Step1:* Navigate to *Message Broker* console (  http://137.122.88.139:8080/osler-mb/ )

[http://i.imgur.com/8Q2lac8.jpg]

*Step2:* Click on *Inject Test Events*

*Step3:* Click on *Choose File* to add the test script file and select the testscript file from  appropriate location.
(say, C:\Users\kavya kumar\Dropbox\Osler Project\Phase 1\TestScripts\CEP Unit Tests\ExtendedScenario\Input)

Ensure that the *Test Mode*  by default is set to *Manual - Allows you to control the timing of each event*

[http://i.imgur.com/2uqLYhL.jpg]

*Step4:* Click on *Run Test Script* option. 

You will observe that all the events in the test script file are loaded on the "Send Test Events" console and are to be manually injected.

[http://i.imgur.com/b1SEpKc.jpg]

*Step5:* Inject some events manually. Click on *Send* button seen next to the events, to send simulated events manually from *Message Broker* to *CEP*

[http://i.imgur.com/XWbRRXX.jpg]

*Step5:* CEP will generate business events based on the detection of a certain event pattern and will be sent to MSG Broker. Verify that all business events are logged in the Incoming Log of the MSG Broker.

 Navigate to http://137.122.88.139:8080/osler-mb/  and Select *Log Analytics* 

[http://i.imgur.com/IyLoNbv.jpg]

*Step7:* Compare the business events logged with the test case *ExtendedScenario_CEPEvents_testscript*. The test is passed if all the events in the test script are logged in the console.


= To Check the Patient Details on PFM console =

*Step1:* Navigate to http://osler.eecs.uottawa.ca/SME/

[http://i.imgur.com/uVBD08p.jpg]

*Step2:* Click on *Patient Details*

[http://i.imgur.com/QAmebif.jpg]

*Step3:* Select the patient/patientId (Say, pmallur9), which is included in the test script 

[http://i.imgur.com/jQUNbG8.jpg]


= On the DB side =

1) To access the DB, do a Remote Connection 

System:137.122.93.90

UserName:lpeyton

Password:xxxxxxxxx

[http://i.imgur.com/d1Tqtnf.jpg]
[http://i.imgur.com/nhNYIeb.jpg]

2) Open *PFMv4* DB from Microsoft Management Studio

[http://i.imgur.com/S8AS9nB.jpg]

3) Check for the patient record entry in the *Patient* dim table.

[http://i.imgur.com/3Yo7UgG.jpg]

4) Check for the *patient_event_fact* table and ensure that the record is updated successfully.

[http://i.imgur.com/R6qWUMV.jpg]